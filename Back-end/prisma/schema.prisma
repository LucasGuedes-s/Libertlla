generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profissionais {
  id            Int        @id @default(autoincrement())
  nome          String
  email         String     @unique
  senha         String
  permissaoId   Int
  foto          String?    @db.VarChar(2048)
  especialidade String
  processo      Int?
  ocorrencias   Ocorrencias[]
  ocorrencias_chat   Conversa[]
  permissao     Permissoes @relation(fields: [permissaoId], references: [id])

}

model Ocorrencias {
  id              Int        @id @default(autoincrement())
  tipo_denuncia   String
  tipo_violencia  String
  agressor        String
  provas          String[]   @db.VarChar(2048)
  descricao       String
  local           String?
  data_denuncia   DateTime?  @db.Date
  data_ocorrencia String
  status          String @default("Andamento") // Adicionando um valor padrão
  registro        Int?
  profisssional   Profissionais? @relation(fields: [profissional], references: [id])
  profissional    Int?
  registros       Registro[] // ✅ Agora é um array, indicando relação 1 para muitos
  email           String?
  vitimaId        Int?      // ID da usuária que fez a ocorrência 
  vitima          Vitima? @relation(fields: [vitimaId], references: [id]) // ✅ Correta relação 1 para muitos
}

model Vitima{
  id                    Int        @id @default(autoincrement())
  nome                  String
  email                 String     @unique
  senha                 String?
  contatosdeEmergencia  String[] @db.VarChar(2048)
  registros             Registro[] // ✅ Correta relação 1 para muitos
  ocorrencias           Ocorrencias[] // ✅ Correta relação 1 para muitos
}

model Registro {
  id         Int        @id @default(autoincrement())
  anexos     String[]   @db.VarChar(2048)
  descricoes String?
  data       String?
  ocorrenciaId Int?      //
  ocorrencia   Ocorrencias? @relation(fields: [ocorrenciaId], references: [id]) // ✅ Correta relação 1 para muitos
  chatId String?  
  chat   Conversa? @relation(fields: [chatId], references: [id]) // ✅ Correta relação 1 para muitos
  vitimaId Int?      // ID da usuária que fez o registro
  vitima   Vitima? @relation(fields: [vitimaId], references: [id]) // ✅ Correta relação 1 para muitos
}

model Permissoes {
  id            Int             @id @default(autoincrement())
  descricao     String?
  profissionais Profissionais[]
}

model Conversa {
  id        String   @id @default(uuid()) // UUID para gerar IDs únicos
  clientId  String   // ID do cliente
  adminId   String?  // ID do admin (pode ser nulo no início)
  messages  Json     // JSONB no PostgreSQL para armazenar a conversa
  status          String @default("Andamento") // Adicionando um valor padrão
  profisssional   Profissionais? @relation(fields: [profissional], references: [id])
  profissional    Int?
  createdAt DateTime @default(now()) // Data da criação
  registros  Registro[] // ✅ Agora é um array, indicando relação 1 para muitos
}
